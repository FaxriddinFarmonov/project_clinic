# Generated by Django 4.2.3 on 2023-09-18 14:16

import app.models.auth
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=128, verbose_name='ismi')),
                ('familya', models.CharField(max_length=128, verbose_name='familya')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Telefon raqami')),
                ('img', models.ImageField(blank=True, null=True, upload_to='docs', verbose_name='rasm')),
                ('info', models.TextField(blank=True, null=True, verbose_name='SHifokor haqida qisqacha')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Elektron pochtasi')),
                ('gender', models.BooleanField(default=True, verbose_name='JInsi')),
                ('new', models.BooleanField(default=True)),
                ('is_spam', models.BooleanField(default=False)),
                ('ut', models.SmallIntegerField(choices=[(1, 'Boshliq'), (2, 'Admin'), (3, 'Doktor'), (4, 'Mijozlar')], default=4, verbose_name='Foydalanuvchi statusi')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Duxtirlar',
                'verbose_name_plural': '1. Duxtirlar',
            },
            managers=[
                ('objects', app.models.auth.CstManager()),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024)),
                ('phone', models.CharField(max_length=512)),
                ('is_expire', models.BooleanField(default=False)),
                ('tries', models.SmallIntegerField(default=0)),
                ('extra', models.JSONField(default={})),
                ('step', models.CharField(max_length=26)),
                ('by', models.IntegerField(choices=[(1, 'By register'), (2, 'By login')])),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Lavozim',
                'verbose_name_plural': '6. lavozim',
            },
        ),
        migrations.CreateModel(
            name='Professions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Kasb',
                'verbose_name_plural': '5. Kasblar',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('info', models.TextField()),
                ('icon', models.ImageField(upload_to='service')),
            ],
            options={
                'verbose_name': 'Servis',
                'verbose_name_plural': '2. Servislar',
            },
        ),
        migrations.CreateModel(
            name='Spam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.service')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.CharField(default='50 000 uzs', max_length=123)),
                ('pr', models.IntegerField(blank=True, editable=False, null=True)),
                ('doc', models.ForeignKey(limit_choices_to={'ut': 3}, on_delete=django.db.models.deletion.CASCADE, related_name='service_prices', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.service')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': '3. Narxlar',
            },
        ),
        migrations.CreateModel(
            name='DocTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free', models.BooleanField(default=True)),
                ('doc', models.ForeignKey(limit_choices_to={'ut': 3}, on_delete=django.db.models.deletion.CASCADE, related_name='doc_time', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vaqt',
                'verbose_name_plural': '4. Vaqt Sarhisobi',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='prof',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.professions', verbose_name='SHifokor Mutaxasisligi'),
        ),
        migrations.AddField(
            model_name='user',
            name='prosition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.position', verbose_name='SHifokor lavozimi'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
